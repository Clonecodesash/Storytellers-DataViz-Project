




import pandas as pd

# Step 1: Load the data
file_path = 'co2-fossil-plus-land-use.csv'  # Update this to your CSV file path
df = pd.read_csv(file_path)

# Step 2: Inspect the data
print(df.head())
print(df.info())
print(df.isnull().sum())

# Step 3: Convert all text in the DataFrame to lowercase
df = df.apply(lambda col: col.map(lambda s: s.lower() if type(s) == str else s))
print(df)

# Step 4: Handle Missing Values
# Drop rows where any of the Emission columns have missing values
Emission_columns = ['Emission_land_use', 'Emission_fossil_use', 'Annual_emissions']
df.dropna(subset=Emission_columns, inplace=True)

# Turn all negative values in Emission columns into positive values
df['Emission_land_use'] = df['Emission_land_use'].abs()
df['Emission_fossil_use'] = df['Emission_fossil_use'].abs()
df['Annual_emissions'] = df['Annual_emissions'].abs()

#print only the country,year,landemission and fossil fuel emission
df = df[['Country', 'Year', 'Emission_land_use', 'Emission_fossil_use']]


df['Country'] = df['Country'].str.lower().str.strip()

# Step 6: Remove Specific Entities
# Remove rows where 'Country' contains specific substrings
df = df[~df['Country'].str.contains(r'asia|world|europe|africa|income|north america', regex=True)]

# # Step 7: Aggregate Data if Necessary
# # Group by 'Country' and 'Year', taking the mean of Emission
# df = df.groupby(['Country', 'Year'], as_index=False).agg({
#     'Emission': 'mean'
# })


# Step 8: Remove Duplicates
df.drop_duplicates(inplace=True)

# Step 9: Map Continents

continent_mapping = {
    'afghanistan': 'Asia',
    'albania': 'Europe',
    'algeria': 'Africa',
    'andorra': 'Europe',
    'angola': 'Africa',
    'anguilla': 'North America',
    'antigua and barbuda': 'North America',
    'argentina': 'South America',
    'armenia': 'Asia',
    'aruba': 'North America',
    'australia': 'Australia',
    'austria': 'Europe',
    'azerbaijan': 'Asia',
    'bahamas': 'North America',
    'bahrain': 'Asia',
    'bangladesh': 'Asia',
    'barbados': 'North America',
    'belarus': 'Europe',
    'belgium': 'Europe',
    'belize': 'North America',
    'benin': 'Africa',
    'bermuda': 'North America',
    'bhutan': 'Asia',
    'bolivia': 'South America',
    'bonaire sint eustatius and saba': 'North America',
    'bosnia and herzegovina': 'Europe',
    'botswana': 'Africa',
    'brazil': 'South America',
    'british virgin islands': 'North America',
    'brunei': 'Asia',
    'bulgaria': 'Europe',
    'burkina faso': 'Africa',
    'burundi': 'Africa',
    'cambodia': 'Asia',
    'cameroon': 'Africa',
    'canada': 'North America',
    'cape verde': 'Africa',
    'chad': 'Africa',
    'chile': 'South America',
    'china': 'Asia',
    'colombia': 'South America',
    'comoros': 'Africa',
    'congo': 'Africa',
    'cook islands': 'Oceania',
    'costa rica': 'North America',
    "cote d'ivoire": 'Africa',
    'croatia': 'Europe',
    'cuba': 'North America',
    'curacao': 'North America',
    'cyprus': 'Asia',
    'czechia': 'Europe',
    'democratic republic of congo': 'Africa',
    'denmark': 'Europe',
    'djibouti': 'Africa',
    'dominica': 'North America',
    'dominican republic': 'North America',
    'east timor': 'Asia',
    'ecuador': 'South America',
    'egypt': 'Africa',
    'el salvador': 'North America',
    'equatorial guinea': 'Africa',
    'eritrea': 'Africa',
    'estonia': 'Europe',
    'eswatini': 'Africa',
    'ethiopia': 'Africa',
    'faroe islands': 'Europe',
    'fiji': 'Oceania',
    'finland': 'Europe',
    'france': 'Europe',
    'french polynesia': 'Oceania',
    'gabon': 'Africa',
    'gambia': 'Africa',
    'georgia': 'Asia',
    'germany': 'Europe',
    'ghana': 'Africa',
    'greece': 'Europe',
    'greenland': 'North America',
    'grenada': 'North America',
    'guatemala': 'North America',
    'guinea': 'Africa',
    'guinea-bissau': 'Africa',
    'guyana': 'South America',
    'haiti': 'North America',
    'honduras': 'North America',
    'hong kong': 'Asia',
    'hungary': 'Europe',
    'iceland': 'Europe',
    'india': 'Asia',
    'indonesia': 'Asia',
    'iran': 'Asia',
    'iraq': 'Asia',
    'ireland': 'Europe',
    'israel': 'Asia',
    'italy': 'Europe',
    'jamaica': 'North America',
    'japan': 'Asia',
    'jordan': 'Asia',
    'kazakhstan': 'Asia',
    'kenya': 'Africa',
    'kiribati': 'Oceania',
    'kosovo': 'Europe',
    'kuwait': 'Asia',
    'kyrgyzstan': 'Asia',
    'laos': 'Asia',
    'latvia': 'Europe',
    'lebanon': 'Asia',
    'lesotho': 'Africa',
    'liberia': 'Africa',
    'libya': 'Africa',
    'liechtenstein': 'Europe',
    'lithuania': 'Europe',
    'luxembourg': 'Europe',
    'macao': 'Asia',
    'madagascar': 'Africa',
    'malawi': 'Africa',
    'malaysia': 'Asia',
    'maldives': 'Asia',
    'mali': 'Africa',
    'malta': 'Europe',
    'marshall islands': 'Oceania',
    'mauritania': 'Africa',
    'mauritius': 'Africa',
    'mexico': 'North America',
    'micronesia (country)': 'Oceania',
    'moldova': 'Europe',
    'mongolia': 'Asia',
    'montenegro': 'Europe',
    'montserrat': 'North America',
    'morocco': 'Africa',
    'mozambique': 'Africa',
    'myanmar': 'Asia',
    'namibia': 'Africa',
    'nauru': 'Oceania',
    'nepal': 'Asia',
    'netherlands': 'Europe',
    'new caledonia': 'Oceania',
    'new zealand': 'Oceania',
    'nicaragua': 'North America',
    'niger': 'Africa',
    'nigeria': 'Africa',
    'niue': 'Oceania',
    'north korea': 'Asia',
    'north macedonia': 'Europe',
    'norway': 'Europe',
    'oceania': 'Oceania',
    'oman': 'Asia',
    'pakistan': 'Asia',
    'palau': 'Oceania',
    'palestine': 'Asia',
    'panama': 'North America',
    'papua new guinea': 'Oceania',
    'paraguay': 'South America',
    'peru': 'South America',
    'philippines': 'Asia',
    'poland': 'Europe',
    'portugal': 'Europe',
    'qatar': 'Asia',
    'romania': 'Europe',
    'russia': 'Asia',
    'rwanda': 'Africa',
    'saint helena': 'Africa',
    'saint kitts and nevis': 'North America',
    'saint lucia': 'North America',
    'saint pierre and miquelon': 'North America',
    'saint vincent and the grenadines': 'North America',
    'samoa': 'Oceania',
    'sao tome and principe': 'Africa',
    'saudi arabia': 'Asia',
    'senegal': 'Africa',
    'serbia': 'Europe',
    'seychelles': 'Africa',
    'sierra leone': 'Africa',
    'singapore': 'Asia',
    'sint maarten (dutch part)': 'North America',
    'slovakia': 'Europe',
    'slovenia': 'Europe',
    'solomon islands': 'Oceania',
    'somalia': 'Africa',
    'south america': 'South America',
    'south korea': 'Asia',
    'south sudan': 'Africa',
    'spain': 'Europe',
    'sri lanka': 'Asia',
    'sudan': 'Africa',
    'suriname': 'South America',
    'sweden': 'Europe',
    'switzerland': 'Europe',
    'syria': 'Asia',
    'taiwan': 'Asia',
    'tajikistan': 'Asia',
    'tanzania': 'Africa',
    'thailand': 'Asia',
    'togo': 'Africa',
    'tonga': 'Oceania',
    'trinidad and tobago': 'North America',
    'tunisia': 'Africa',
    'turkey': 'Asia',
    'turkmenistan': 'Asia',
    'turks and caicos islands': 'North America',
    'tuvalu': 'Oceania',
    'uganda': 'Africa',
    'ukraine': 'Europe',
    'united arab emirates': 'Asia',
    'united kingdom': 'Europe',
    'united states': 'North America',
    'uruguay': 'South America',
    'uzbekistan': 'Asia',
    'vanuatu': 'Oceania',
    'venezuela': 'South America',
    'vietnam': 'Asia',
    'wallis and futuna': 'Oceania',
    'yemen': 'Asia',
    'zambia': 'Africa',
    'zimbabwe': 'Africa'
}


# Population data mapping
population_mapping = {
    'afghanistan': 38928346,
    'albania': 2877797,
    'algeria': 43851044,
    'andorra': 77265,
    'angola': 32866272,
    'anguilla': 15003,
    'antigua and barbuda': 97929,
    'argentina': 45195774,
    'armenia': 2963243,
    'aruba': 106766,
    'australia': 25499884,
    'austria': 9006398,
    'azerbaijan': 10139177,
    'bahamas': 393244,
    'bahrain': 1701575,
    'bangladesh': 164689383,
    'barbados': 287375,
    'belarus': 9449323,
    'belgium': 11589623,
    'belize': 397628,
    'benin': 12123200,
    'bermuda': 62278,
    'bhutan': 771608,
    'bolivia': 11673021,
    'bonaire sint eustatius and saba': 26223,
    'bosnia and herzegovina': 3280819,
    'botswana': 2351627,
    'brazil': 212559417,
    'british virgin islands': 30231,
    'brunei': 437479,
    'bulgaria': 6948445,
    'burkina faso': 20903273,
    'burundi': 11890784,
    'cambodia': 16718965,
    'cameroon': 26545863,
    'canada': 37742154,
    'cape verde': 555987,
    'chad': 16425864,
    'chile': 19116201,
    'china': 1439323776,
    'colombia': 50882891,
    'comoros': 869601,
    'congo': 5518087,
    'cook islands': 17564,
    'costa rica': 5094118,
    "cote d'ivoire": 26378274,
    'croatia': 4105267,
    'cuba': 11326616,
    'curacao': 164093,
    'cyprus': 1207359,
    'czechia': 10708981,
    'democratic republic of congo': 89561403,
    'denmark': 5818553,
    'djibouti': 988000,
    'dominica': 71986,
    'dominican republic': 10847910,
    'east timor': 1318445,
    'ecuador': 17643054,
    'egypt': 102334404,
    'el salvador': 6486205,
    'equatorial guinea': 1402985,
    'eritrea': 3546421,
    'estonia': 1326535,
    'eswatini': 1160164,
    'ethiopia': 114963588,
    'faroe islands': 48863,
    'fiji': 896445,
    'finland': 5540720,
    'france': 65273511,
    'french polynesia': 280904,
    'gabon': 2225734,
    'gambia': 2416668,
    'georgia': 3989167,
    'germany': 83783942,
    'ghana': 31072940,
    'greece': 10423054,
    'greenland': 56770,
    'grenada': 112523,
    'guatemala': 17915568,
    'guinea': 13132795,
    'guinea-bissau': 1968001,
    'guyana': 786552,
    'haiti': 11402528,
    'honduras': 9904607,
    'hong kong': 7496981,
    'hungary': 9660351,
    'iceland': 343599,
    'india': 1380004385,
    'indonesia': 273523615,
    'iran': 83992949,
    'iraq': 40222493,
    'ireland': 4937786,
    'israel': 8655535,
    'italy': 60244639,
    'jamaica': 2961167,
    'japan': 126476461,
    'jordan': 10203134,
    'kazakhstan': 18776707,
    'kenya': 53771296,
    'kiribati': 119449,
    'kosovo': 1831000,
    'kuwait': 4270571,
    'kyrgyzstan': 6524195,
    'laos': 7275560,
    'latvia': 1886198,
    'lebanon': 6825445,
    'lesotho': 2142249,
    'liberia': 5057681,
    'libya': 6871292,
    'liechtenstein': 38128,
    'lithuania': 2722289,
    'luxembourg': 634814,
    'macao': 649335,
    'madagascar': 27691018,
    'malawi': 19129952,
    'malaysia': 32365999,
    'maldives': 540544,
    'mali': 20250833,
    'malta': 514564,
    'marshall islands': 59190,
    'mauritania': 4649658,
    'mauritius': 1271768,
    'mexico': 128932753,
    'micronesia (country)': 115023,
    'moldova': 2657637,
    'mongolia': 3278290,
    'montenegro': 622359,
    'montserrat': 4992,
    'morocco': 36910560,
    'mozambique': 31255435,
    'myanmar': 54409800,
    'namibia': 2540905,
    'nauru': 10834,
    'nepal': 29136808,
    'netherlands': 17134872,
    'new caledonia': 285498,
    'new zealand': 4822233,
    'nicaragua': 6624554,
    'niger': 24206644,
    'nigeria': 206139589,
    'niue': 1626,
    'north korea': 25778816,
    'north macedonia': 2083459,
    'norway': 5421241,
    'oman': 5106626,
    'pakistan': 220892340,
    'palau': 18094,
    'palestine': 5101414,
    'panama': 4314767,
    'papua new guinea': 8947024,
    'paraguay': 7132538,
    'peru': 32971854,
    'philippines': 109581078,
    'poland': 38386000,
    'portugal': 10196709,
    'qatar': 2881053,
    'romania': 19237691,
    'russia': 145912025,
    'rwanda': 12952218,
    'saint helena': 6077,
    'saint kitts and nevis': 53199,
    'saint lucia': 183627,
    'saint pierre and miquelon': 5794,
    'saint vincent and the grenadines': 110940,
    'samoa': 198414,
    'sao tome and principe': 219159,
    'saudi arabia': 34813871,
    'senegal': 16743927,
    'serbia': 8772235,
    'seychelles': 98347,
    'sierra leone': 7976983,
    'singapore': 5850342,
    'sint maarten (dutch part)': 42876,
    'slovakia': 5456362,
    'slovenia': 2078654,
    'solomon islands': 686878,
    'somalia': 15893222,
    'south america': 430759766,
    'south korea': 51269185,
    'south sudan': 11193725,
    'spain': 46754778,
    'sri lanka': 21413249,
    'sudan': 43849260,
    'suriname': 586632,
    'sweden': 10099265,
    'switzerland': 8654622,
    'syria': 17500658,
    'taiwan': 23816775,
    'tajikistan': 9537645,
    'tanzania': 59734218,
    'thailand': 69799978,
    'togo': 8278724,
    'tonga': 105695,
    'trinidad and tobago': 1399488,
    'tunisia': 11818619,
    'turkey': 84339067,
    'turkmenistan': 6031200,
    'turks and caicos islands': 38717,
    'tuvalu': 11792,
    'uganda': 45741007,
    'ukraine': 43733762,
    'united arab emirates': 9890402,
    'united kingdom': 67886011,
    'united states': 331002651,
    'uruguay': 3473730,
    'uzbekistan': 33469203,
    'vanuatu': 307145,
    'venezuela': 28435940,
    'vietnam': 97338579,
    'wallis and futuna': 11239,
    'yemen': 29825964,
    'zambia': 18383955,
    'zimbabwe': 14862924
}

# Map population to each country
# df['Population'] = df['Country'].map(population_mapping)

# # Create a new column by multiplying population by emission
# df['Population_Emission'] = df['Population'] * df['Emission']

# df['Region'] = df['Country'].map(continent_mapping)

# # Handle missing values in the 'continent' column
# df['Region'].fillna('Unknown', inplace=True)

# Filter by the top ten countries with high emission
df = df[(df['Year'] >= 2017) & (df['Year'] <= 2024)]

# # Step 12: Keep top 5 countries in each region for each year and sum up the rest
# def keep_top_n_and_others_per_year(df, group_col1, group_col2, sort_col, n=5):
#     top_n = df.groupby([group_col1, group_col2]).apply(lambda x: x.nlargest(n, sort_col)).reset_index(drop=True)
#     others = df[~df.index.isin(top_n.index)]
#     others_sum = others.groupby([group_col1, group_col2]).agg({
#         'Emission': 'sum',
#         'Population': 'sum',
#         'Population_Emission': 'sum'
#     }).reset_index()
#     others_sum['Country'] = 'others'
#     return pd.concat([top_n, others_sum], ignore_index=True)

# df = keep_top_n_and_others_per_year(df, 'Region', 'Year', 'Population_Emission')



# Step 10: Export Clean Data
cleaned_file_path = 'cleaned_data2.csv'  # Specify the path for the cleaned data
df.to_csv(cleaned_file_path, index=False)

print("Data cleaning complete. Cleaned data saved to:", cleaned_file_path)
